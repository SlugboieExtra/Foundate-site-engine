/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type CallToActionObject = {
  _type: "callToActionObject";
  callToActionTitle?: string;
  callToActionParagraph?: string;
};

export type SpacerObject = {
  _type: "spacerObject";
  spacing?: "none" | "small" | "medium" | "large";
};

export type SingleImageObject = {
  _type: "singleImageObject";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    altText?: string;
    aspectRatio?: "square" | "rectangle" | "portrait";
    cornerRadius?: "rounded" | "straight";
    enableBorder?: boolean;
    borderStyle?: "solid" | "dashed";
    _type: "image";
  };
};

export type ButtonObject = {
  _type: "buttonObject";
  showButton?: boolean;
  buttonText?: string;
  buttonType?: "internal" | "anchor" | "external" | "fileDownload" | "emailAddress";
  buttonAnchorLocation?: "currentPage" | "choosePage";
  buttonPageReference?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blogPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "servicesPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "projectsPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "service";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "project";
  };
  buttonAnchorId?: string;
  buttonExternalUrl?: string;
  buttonEmailAddress?: string;
  buttonFileUrl?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    _type: "file";
  };
  buttonVariant?: "primary" | "secondary" | "tertiary" | "outline" | "underline";
  buttonWidth?: "auto" | "fullWidth";
};

export type RichTextObject = {
  _type: "richTextObject";
  richTextContent?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type HeadingObject = {
  _type: "headingObject";
  headingText?: string;
  headingSize?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
};

export type FormBlock = {
  _type: "formBlock";
  heading?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  form?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "form";
  };
  anchorId?: string;
  paddingTop?: "none" | "small" | "medium" | "default" | "large";
  paddingBottom?: "none" | "small" | "medium" | "default" | "large";
};

export type ServicesBlock = {
  _type: "servicesBlock";
  heading?: string;
  services?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "service";
  }>;
  background?: "white" | "pattern";
  topCornerRadius?: "straight" | "rounded";
  buttons?: Array<{
    _key: string;
  } & ButtonObject>;
  anchorId?: string;
  paddingTop?: "none" | "small" | "medium" | "default" | "large";
  paddingBottom?: "none" | "small" | "medium" | "default" | "large";
};

export type TestimonialBlock = {
  _type: "testimonialBlock";
  heading?: string;
  eyebrow?: string;
  testimonials?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "testimonial";
  }>;
  anchorId?: string;
  paddingTop?: "none" | "small" | "medium" | "default" | "large";
  paddingBottom?: "none" | "small" | "medium" | "default" | "large";
};

export type LogoBlock = {
  _type: "logoBlock";
  heading?: string;
  logos?: Array<{
    title?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    size?: "default" | "large";
    link?: string;
    _key: string;
  }>;
  anchorId?: string;
};

export type CallToActionBlock = {
  _type: "callToActionBlock";
  heading?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  buttons?: Array<{
    _key: string;
  } & ButtonObject>;
  anchorId?: string;
  paddingTop?: "none" | "small" | "medium" | "default" | "large";
  paddingBottom?: "none" | "small" | "medium" | "default" | "large";
};

export type PortableTextBlock = {
  _type: "portableTextBlock";
  title?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
  } & CallToActionObject>;
  alignment?: "left" | "center" | "right";
  anchorId?: string;
  paddingTop?: "none" | "small" | "medium" | "default" | "large";
  paddingBottom?: "none" | "small" | "medium" | "default" | "large";
};

export type FreeformBlock = {
  _type: "freeformBlock";
  title?: string;
  columnsPerRow?: "2" | "3" | "4";
  columns?: Array<{
    title?: string;
    spacing?: "none" | "small" | "medium" | "large";
    alignment?: "left" | "center" | "right";
    items?: Array<{
      _key: string;
    } & SpacerObject | {
      _key: string;
    } & HeadingObject | {
      _key: string;
    } & RichTextObject | {
      _key: string;
    } & ButtonObject | {
      _key: string;
    } & SingleImageObject>;
    _key: string;
  }>;
  border?: "none" | "topBottom" | "top" | "bottom";
  anchorId?: string;
};

export type FeaturesMinimalBlock = {
  _type: "featuresMinimalBlock";
  heading?: string;
  buttons?: Array<{
    _key: string;
  } & ButtonObject>;
  features?: Array<string>;
  enableBorderTop?: boolean;
  cornerRadiusTop?: "rounded" | "straight";
  enableBorderBottom?: boolean;
  cornerRadiusBottom?: "rounded" | "straight";
  anchorId?: string;
  paddingTop?: "none" | "small" | "medium" | "default" | "large";
  paddingBottom?: "none" | "small" | "medium" | "default" | "large";
};

export type FeatureCardsBlock = {
  _type: "featureCardsBlock";
  heading?: string;
  buttons?: Array<{
    _key: string;
  } & ButtonObject>;
  features?: Array<{
    title?: string;
    description?: string;
    items?: Array<string>;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    button?: {
      showButton?: boolean;
      buttonText?: string;
      buttonType?: "internal" | "anchor" | "external" | "fileDownload" | "emailAddress";
      buttonAnchorLocation?: "currentPage" | "choosePage";
      buttonPageReference?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "blogPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "servicesPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "projectsPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "service";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "project";
      };
      buttonAnchorId?: string;
      buttonExternalUrl?: string;
      buttonEmailAddress?: string;
      buttonFileUrl?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        _type: "file";
      };
      buttonVariant?: "primary" | "secondary" | "tertiary" | "outline" | "underline";
      buttonWidth?: "auto" | "fullWidth";
    };
    _key: string;
  }>;
  anchorId?: string;
  paddingTop?: "none" | "small" | "medium" | "default" | "large";
  paddingBottom?: "none" | "small" | "medium" | "default" | "large";
};

export type HeaderBlock = {
  _type: "headerBlock";
  heading?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  bottomCornerRadius?: "straight" | "rounded";
  anchorId?: string;
};

export type HeroBlock = {
  _type: "heroBlock";
  heading?: string;
  showBackButton?: boolean;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  mediaType?: "image" | "none";
  bottomCornerRadius?: "straight" | "rounded";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    altText?: string;
    cornerRadius?: "rounded" | "straight";
    height?: "full" | "short";
    _type: "image";
  };
  buttons?: Array<{
    _key: string;
  } & ButtonObject>;
  anchorId?: string;
};

export type PageBuilder = Array<{
  _key: string;
} & HeroBlock | {
  _key: string;
} & HeaderBlock | {
  _key: string;
} & FeatureCardsBlock | {
  _key: string;
} & FeaturesMinimalBlock | {
  _key: string;
} & FreeformBlock | {
  _key: string;
} & PortableTextBlock | {
  _key: string;
} & CallToActionBlock | {
  _key: string;
} & LogoBlock | {
  _key: string;
} & TestimonialBlock | {
  _key: string;
} & ServicesBlock | {
  _key: string;
} & FormBlock>;

export type Faq = {
  _id: string;
  _type: "faq";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  question?: string;
  answer?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  orderRank?: string;
};

export type Testimonial = {
  _id: string;
  _type: "testimonial";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  jobTitle?: string;
  company?: string;
  quote?: string;
  avatar?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  orderRank?: string;
};

export type BlogSettings = {
  _id: string;
  _type: "blogSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  showRelatedPosts?: boolean;
  showTableOfContents?: boolean;
  showPostsByCategory?: boolean;
};

export type NavigationSettings = {
  _id: string;
  _type: "navigationSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  navbarMenuItems?: Array<{
    menuItemType?: "single" | "group";
    title?: string;
    pageReference?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "blogPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "servicesPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "projectsPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "service";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "project";
    };
    pageReferences?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "blogPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "servicesPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "projectsPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "service";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "project";
    }>;
    isButton?: boolean;
    _key: string;
  }>;
  showSlideOutMenu?: boolean;
  slideOutMenuItems?: Array<{
    title?: string;
    pageReference?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "blogPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "servicesPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "projectsPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "service";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "project";
    };
    isButton?: boolean;
    _key: string;
  }>;
  slideOutMenuButtons?: Array<{
    _key: string;
  } & ButtonObject>;
  showCompanyDetailsSlideOutMenu?: boolean;
  footerColumns?: Array<{
    title?: string;
    menuItems?: Array<{
      title?: string;
      pageReference?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "blogPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "servicesPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "projectsPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "service";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "project";
      };
      _key: string;
    }>;
    _key: string;
  }>;
  footerLegalMenuItems?: Array<{
    title?: string;
    pageReference?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "blogPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "servicesPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "projectsPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "service";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "project";
    };
    _key: string;
  }>;
};

export type GeneralSettings = {
  _id: string;
  _type: "generalSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  siteTitle?: string;
  siteLogo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  homePage?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blogPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "servicesPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "projectsPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "service";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "project";
  };
  companyEmailAddress?: string;
  companyPhoneNumber?: string;
  companySocialMediaLinks?: Array<{
    title?: string;
    profileUrl?: string;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }>;
  copyright?: string;
};

export type Form = {
  _id: string;
  _type: "form";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  submitButtonText?: string;
  fields?: Array<{
    name?: string;
    placeholder?: string;
    inputType?: "text" | "textarea" | "email" | "tel";
    isRequired?: boolean;
    _key: string;
  }>;
};

export type Post = {
  _id: string;
  _type: "post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  category?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "postCategory";
  };
  author?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "author";
  };
  excerpt?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
  } & CallToActionObject>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    altText?: string;
    caption?: string;
    cornerRadius?: "rounded" | "straight";
    _type: "image";
  };
  relatedPostsType?: "autofill" | "custom";
  customRelatedPosts?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "post";
  }>;
  metaTitle?: string;
  metaDescription?: string;
  metaKeywords?: string;
};

export type Author = {
  _id: string;
  _type: "author";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  username?: string;
  bio?: string;
  avatar?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type PostCategory = {
  _id: string;
  _type: "postCategory";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  categoryColor?: SimplerColor;
  orderRank?: string;
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  pageBuilder?: PageBuilder;
  metaTitle?: string;
  metaDescription?: string;
  metaKeywords?: string;
};

export type BlogPage = {
  _id: string;
  _type: "blogPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  pageBuilder?: PageBuilder;
  metaTitle?: string;
  metaDescription?: string;
  metaKeywords?: string;
};

export type ServicesPage = {
  _id: string;
  _type: "servicesPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  pageBuilder?: PageBuilder;
  metaTitle?: string;
  metaDescription?: string;
  metaKeywords?: string;
};

export type ProjectsPage = {
  _id: string;
  _type: "projectsPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  pageBuilder?: PageBuilder;
  metaTitle?: string;
  metaDescription?: string;
  metaKeywords?: string;
};

export type Service = {
  _id: string;
  _type: "service";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  shortDescription?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    altText?: string;
    caption?: string;
    cornerRadius?: "rounded" | "straight";
    _type: "image";
  };
  pageBuilder?: PageBuilder;
  orderRank?: string;
};

export type Project = {
  _id: string;
  _type: "project";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  category?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "projectCategory";
  };
  excerpt?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    altText?: string;
    caption?: string;
    cornerRadius?: "rounded" | "straight";
    _type: "image";
  };
  pageBuilder?: PageBuilder;
};

export type ProjectCategory = {
  _id: string;
  _type: "projectCategory";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  orderRank?: string;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type HighlightColor = {
  _type: "highlightColor";
  label?: string;
  value?: string;
};

export type TextColor = {
  _type: "textColor";
  label?: string;
  value?: string;
};

export type SimplerColor = {
  _type: "simplerColor";
  label?: string;
  value?: string;
};

export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | Geopoint | CallToActionObject | SpacerObject | SingleImageObject | ButtonObject | RichTextObject | HeadingObject | FormBlock | ServicesBlock | TestimonialBlock | LogoBlock | CallToActionBlock | PortableTextBlock | FreeformBlock | FeaturesMinimalBlock | FeatureCardsBlock | HeaderBlock | HeroBlock | PageBuilder | Faq | Testimonial | BlogSettings | NavigationSettings | GeneralSettings | Form | Post | Author | PostCategory | Page | BlogPage | ServicesPage | ProjectsPage | Service | Project | ProjectCategory | SanityFileAsset | SanityImageCrop | SanityImageHotspot | SanityImageAsset | SanityAssetSourceData | SanityImageMetadata | Slug | HighlightColor | TextColor | SimplerColor;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/sanity/lib/queries/documents/page.ts
// Variable: pagePathsQuery
// Query: *[_type == "page" && defined(slug.current)][] {  'params': { 'slug': slug.current }}
export type PagePathsQueryResult = Array<{
  params: {
    slug: string | null;
  };
}>;
// Variable: pageBySlugQuery
// Query: *[_type == 'page' && slug.current == $slug][0] {  _type,  title,  'slug': slug.current,    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    showBackButton,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       asset->{ url },       cornerRadius,      altText,      height     },    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {         asset->{ url },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {         asset->{ url },      },      button {          _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    buttons[] {        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {         asset->{ url },       },      size,      link    },    anchorId  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {         asset->{ url },       },      logo {         asset->{ url },       },    },    anchorId,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           asset->{ url },           aspectRatio,          cornerRadius,          enableBorder,          borderStyle,          altText         },        headingText,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {         asset->{ url },         aspectRatio,        cornerRadius,        enableBorder,        borderStyle,        altText       },      "slug": slug.current,    },    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  }  },    metaTitle,  metaDescription,  metaKeywords,}
export type PageBySlugQueryResult = {
  _type: "page";
  title: string | null;
  slug: string | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      button: {
        _id: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        headingText: string | null;
        headingSize: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          asset: {
            url: string | null;
          } | null;
          aspectRatio: "portrait" | "rectangle" | "square" | null;
          cornerRadius: "rounded" | "straight" | null;
          enableBorder: boolean | null;
          borderStyle: "dashed" | "solid" | null;
          altText: string | null;
        } | null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    showBackButton: boolean | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      cornerRadius: "rounded" | "straight" | null;
      altText: string | null;
      height: "full" | "short" | null;
    } | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
        aspectRatio: null;
        cornerRadius: "rounded" | "straight" | null;
        enableBorder: null;
        borderStyle: null;
        altText: string | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  }> | null;
  metaTitle: string | null;
  metaDescription: string | null;
  metaKeywords: string | null;
} | null;

// Source: ./src/sanity/lib/queries/documents/post.ts
// Variable: postBySlugQuery
// Query: *[_type == 'post' && slug.current == $slug][0] {  _id,  _type,  _createdAt,  title,  'slug': slug.current,  excerpt,  "tableOfContents": content[style in ["h2", "h3", "h4", "h5", "h6"]],  content[],  category->{    _id,    title,    categoryColor {      value    },    'slug': slug.current,  },  author->{    _id,    name,    username,    bio,    avatar {       asset->{ url },     },  },  image {     asset->{ url },     altText,    caption,     cornerRadius,  },  relatedPostsType,  "relatedPosts": select(    relatedPostsType == "custom" => customRelatedPosts[]->{       _id,      _createdAt,      title,      'slug': slug.current,      excerpt,      category->{        _id,        title,        categoryColor->{          value        },        'slug': slug.current,      },      author->{        _id,        name,        username,        bio,        avatar {           asset->{ url },         },      },      image {         asset->{ url },         cornerRadius,        altText       }    },    relatedPostsType == "autofill" => *[_type == 'post' && category._ref == ^.category._ref && _id != ^._id][0...3]{       _id,      _createdAt,      title,      'slug': slug.current,      category->{        _id,        title,        categoryColor->{          value        },        'slug': slug.current,      },      author->{        _id,        name,        username,        bio,        avatar {           asset->{ url },         },      },      excerpt,      image {         asset->{ url },         cornerRadius,        altText       }    },  ),  "settings": *[_type == "blogSettings"][0] {    showRelatedPosts,    showTableOfContents,    showPostsByCategory  },  "categories": *[_type == "postCategory"] {    _id,    title,    'slug': slug.current,  },    metaTitle,  metaDescription,  metaKeywords,}
export type PostBySlugQueryResult = {
  _id: string;
  _type: "post";
  _createdAt: string;
  title: string | null;
  slug: string | null;
  excerpt: string | null;
  tableOfContents: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  content: Array<{
    _key: string;
  } & CallToActionObject | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  category: {
    _id: string;
    title: string | null;
    categoryColor: {
      value: string | null;
    } | null;
    slug: string | null;
  } | null;
  author: {
    _id: string;
    name: string | null;
    username: string | null;
    bio: string | null;
    avatar: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | null;
  image: {
    asset: {
      url: string | null;
    } | null;
    altText: string | null;
    caption: string | null;
    cornerRadius: "rounded" | "straight" | null;
  } | null;
  relatedPostsType: "autofill" | "custom" | null;
  relatedPosts: Array<{
    _id: string;
    _createdAt: string;
    title: string | null;
    slug: string | null;
    category: {
      _id: string;
      title: string | null;
      categoryColor: null;
      slug: string | null;
    } | null;
    author: {
      _id: string;
      name: string | null;
      username: string | null;
      bio: string | null;
      avatar: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    } | null;
    excerpt: string | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      cornerRadius: "rounded" | "straight" | null;
      altText: string | null;
    } | null;
  }> | null;
  settings: {
    showRelatedPosts: boolean | null;
    showTableOfContents: boolean | null;
    showPostsByCategory: boolean | null;
  } | null;
  categories: Array<{
    _id: string;
    title: string | null;
    slug: string | null;
  }>;
  metaTitle: string | null;
  metaDescription: string | null;
  metaKeywords: string | null;
} | null;
// Variable: allPostsQuery
// Query: *[_type == 'post'] {  _id,  _type,  _createdAt,  title,  'slug': slug.current,  excerpt,  category->{    _id,    title,    'slug': slug.current,  },  author->{    _id,    name,    username,    bio,    avatar {       asset->{ url },     },  },  image {     asset->{ url },     cornerRadius,    altText   },}
export type AllPostsQueryResult = Array<{
  _id: string;
  _type: "post";
  _createdAt: string;
  title: string | null;
  slug: string | null;
  excerpt: string | null;
  category: {
    _id: string;
    title: string | null;
    slug: string | null;
  } | null;
  author: {
    _id: string;
    name: string | null;
    username: string | null;
    bio: string | null;
    avatar: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | null;
  image: {
    asset: {
      url: string | null;
    } | null;
    cornerRadius: "rounded" | "straight" | null;
    altText: string | null;
  } | null;
}>;
// Variable: allPostCategoriesQuery
// Query: *[_type == 'postCategory'] | order(orderRank asc) {  _id,  _type,  title,  'slug': slug.current,}
export type AllPostCategoriesQueryResult = Array<{
  _id: string;
  _type: "postCategory";
  title: string | null;
  slug: string | null;
}>;
// Variable: postsByCategoryQuery
// Query: *[_type == 'post' && category->slug.current == $slug] {  _id,  _type,  _createdAt,  title,  'slug': slug.current,  excerpt,  category->{    _id,    title,    'slug': slug.current,  },  author->{    _id,    name,    username,    bio,    avatar {       asset->{ url },     },  },  image {     asset->{ url },     cornerRadius,    altText   },}
export type PostsByCategoryQueryResult = Array<{
  _id: string;
  _type: "post";
  _createdAt: string;
  title: string | null;
  slug: string | null;
  excerpt: string | null;
  category: {
    _id: string;
    title: string | null;
    slug: string | null;
  } | null;
  author: {
    _id: string;
    name: string | null;
    username: string | null;
    bio: string | null;
    avatar: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | null;
  image: {
    asset: {
      url: string | null;
    } | null;
    cornerRadius: "rounded" | "straight" | null;
    altText: string | null;
  } | null;
}>;

// Source: ./src/sanity/lib/queries/documents/project.ts
// Variable: projectsPageQuery
// Query: *[_type == 'projectsPage'][0] {  _type,  title,  'slug': slug.current,    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    showBackButton,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       asset->{ url },       cornerRadius,      altText,      height     },    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {         asset->{ url },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {         asset->{ url },      },      button {          _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    buttons[] {        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {         asset->{ url },       },      size,      link    },    anchorId  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {         asset->{ url },       },      logo {         asset->{ url },       },    },    anchorId,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           asset->{ url },           aspectRatio,          cornerRadius,          enableBorder,          borderStyle,          altText         },        headingText,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {         asset->{ url },         aspectRatio,        cornerRadius,        enableBorder,        borderStyle,        altText       },      "slug": slug.current,    },    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  }  },    metaTitle,  metaDescription,  metaKeywords,}
export type ProjectsPageQueryResult = {
  _type: "projectsPage";
  title: string | null;
  slug: string | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      button: {
        _id: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        headingText: string | null;
        headingSize: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          asset: {
            url: string | null;
          } | null;
          aspectRatio: "portrait" | "rectangle" | "square" | null;
          cornerRadius: "rounded" | "straight" | null;
          enableBorder: boolean | null;
          borderStyle: "dashed" | "solid" | null;
          altText: string | null;
        } | null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    showBackButton: boolean | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      cornerRadius: "rounded" | "straight" | null;
      altText: string | null;
      height: "full" | "short" | null;
    } | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
        aspectRatio: null;
        cornerRadius: "rounded" | "straight" | null;
        enableBorder: null;
        borderStyle: null;
        altText: string | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  }> | null;
  metaTitle: string | null;
  metaDescription: string | null;
  metaKeywords: string | null;
} | null;
// Variable: projectPathsQuery
// Query: *[_type == "project" && defined(slug.current)][] {  'params': { 'slug': slug.current }}
export type ProjectPathsQueryResult = Array<{
  params: {
    slug: string | null;
  };
}>;
// Variable: projectBySlugQuery
// Query: *[_type == 'project' && slug.current == $slug][0] {  _id,  _type,  title,  'slug': slug.current,  category->{    _id,    title,    'slug': slug.current,  },    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    showBackButton,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       asset->{ url },       cornerRadius,      altText,      height     },    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {         asset->{ url },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {         asset->{ url },      },      button {          _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    buttons[] {        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {         asset->{ url },       },      size,      link    },    anchorId  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {         asset->{ url },       },      logo {         asset->{ url },       },    },    anchorId,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           asset->{ url },           aspectRatio,          cornerRadius,          enableBorder,          borderStyle,          altText         },        headingText,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {         asset->{ url },         aspectRatio,        cornerRadius,        enableBorder,        borderStyle,        altText       },      "slug": slug.current,    },    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  }  },    metaTitle,  metaDescription,  metaKeywords,}
export type ProjectBySlugQueryResult = {
  _id: string;
  _type: "project";
  title: string | null;
  slug: string | null;
  category: {
    _id: string;
    title: string | null;
    slug: string | null;
  } | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      button: {
        _id: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        headingText: string | null;
        headingSize: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          asset: {
            url: string | null;
          } | null;
          aspectRatio: "portrait" | "rectangle" | "square" | null;
          cornerRadius: "rounded" | "straight" | null;
          enableBorder: boolean | null;
          borderStyle: "dashed" | "solid" | null;
          altText: string | null;
        } | null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    showBackButton: boolean | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      cornerRadius: "rounded" | "straight" | null;
      altText: string | null;
      height: "full" | "short" | null;
    } | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
        aspectRatio: null;
        cornerRadius: "rounded" | "straight" | null;
        enableBorder: null;
        borderStyle: null;
        altText: string | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  }> | null;
  metaTitle: null;
  metaDescription: null;
  metaKeywords: null;
} | null;
// Variable: allProjectsQuery
// Query: *[_type == 'project'] {  _id,  _type,  title,  'slug': slug.current,  excerpt,  category->{    _id,    title,    'slug': slug.current,  },  image {     asset->{ url },     cornerRadius,    height,    altText   },    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    showBackButton,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       asset->{ url },       cornerRadius,      altText,      height     },    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {         asset->{ url },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {         asset->{ url },      },      button {          _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    buttons[] {        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {         asset->{ url },       },      size,      link    },    anchorId  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {         asset->{ url },       },      logo {         asset->{ url },       },    },    anchorId,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           asset->{ url },           aspectRatio,          cornerRadius,          enableBorder,          borderStyle,          altText         },        headingText,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {         asset->{ url },         aspectRatio,        cornerRadius,        enableBorder,        borderStyle,        altText       },      "slug": slug.current,    },    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  }  },    metaTitle,  metaDescription,  metaKeywords,}
export type AllProjectsQueryResult = Array<{
  _id: string;
  _type: "project";
  title: string | null;
  slug: string | null;
  excerpt: string | null;
  category: {
    _id: string;
    title: string | null;
    slug: string | null;
  } | null;
  image: {
    asset: {
      url: string | null;
    } | null;
    cornerRadius: "rounded" | "straight" | null;
    height: null;
    altText: string | null;
  } | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      button: {
        _id: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        headingText: string | null;
        headingSize: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          asset: {
            url: string | null;
          } | null;
          aspectRatio: "portrait" | "rectangle" | "square" | null;
          cornerRadius: "rounded" | "straight" | null;
          enableBorder: boolean | null;
          borderStyle: "dashed" | "solid" | null;
          altText: string | null;
        } | null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    showBackButton: boolean | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      cornerRadius: "rounded" | "straight" | null;
      altText: string | null;
      height: "full" | "short" | null;
    } | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
        aspectRatio: null;
        cornerRadius: "rounded" | "straight" | null;
        enableBorder: null;
        borderStyle: null;
        altText: string | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  }> | null;
  metaTitle: null;
  metaDescription: null;
  metaKeywords: null;
}>;
// Variable: allProjectCategoriesQuery
// Query: *[_type == 'projectCategory'] | order(orderRank asc) {  _id,  _type,  title,  'slug': slug.current,}
export type AllProjectCategoriesQueryResult = Array<{
  _id: string;
  _type: "projectCategory";
  title: string | null;
  slug: string | null;
}>;
// Variable: projectsByCategoryQuery
// Query: *[_type == 'project' && category->slug.current == $slug] {  _id,  _type,  _createdAt,  title,  'slug': slug.current,  excerpt,  category->{    _id,    title,    'slug': slug.current,  },  image {     asset->{ url },     cornerRadius,    height,    altText   },}
export type ProjectsByCategoryQueryResult = Array<{
  _id: string;
  _type: "project";
  _createdAt: string;
  title: string | null;
  slug: string | null;
  excerpt: string | null;
  category: {
    _id: string;
    title: string | null;
    slug: string | null;
  } | null;
  image: {
    asset: {
      url: string | null;
    } | null;
    cornerRadius: "rounded" | "straight" | null;
    height: null;
    altText: string | null;
  } | null;
}>;

// Source: ./src/sanity/lib/queries/documents/service.ts
// Variable: servicePathsQuery
// Query: *[_type == "service" && defined(slug.current)][] {  'params': { 'slug': slug.current }}
export type ServicePathsQueryResult = Array<{
  params: {
    slug: string | null;
  };
}>;
// Variable: serviceBySlugQuery
// Query: *[_type == 'service' && slug.current == $slug][0] {  _type,  title,  'slug': slug.current,    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    showBackButton,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       asset->{ url },       cornerRadius,      altText,      height     },    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {         asset->{ url },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {         asset->{ url },      },      button {          _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    buttons[] {        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {         asset->{ url },       },      size,      link    },    anchorId  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {         asset->{ url },       },      logo {         asset->{ url },       },    },    anchorId,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           asset->{ url },           aspectRatio,          cornerRadius,          enableBorder,          borderStyle,          altText         },        headingText,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {         asset->{ url },         aspectRatio,        cornerRadius,        enableBorder,        borderStyle,        altText       },      "slug": slug.current,    },    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  }  },    metaTitle,  metaDescription,  metaKeywords,}
export type ServiceBySlugQueryResult = {
  _type: "service";
  title: string | null;
  slug: string | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      button: {
        _id: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        headingText: string | null;
        headingSize: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          asset: {
            url: string | null;
          } | null;
          aspectRatio: "portrait" | "rectangle" | "square" | null;
          cornerRadius: "rounded" | "straight" | null;
          enableBorder: boolean | null;
          borderStyle: "dashed" | "solid" | null;
          altText: string | null;
        } | null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    showBackButton: boolean | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      cornerRadius: "rounded" | "straight" | null;
      altText: string | null;
      height: "full" | "short" | null;
    } | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
        aspectRatio: null;
        cornerRadius: "rounded" | "straight" | null;
        enableBorder: null;
        borderStyle: null;
        altText: string | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  }> | null;
  metaTitle: null;
  metaDescription: null;
  metaKeywords: null;
} | null;
// Variable: allServicesQuery
// Query: *[_type == 'service'] {  _type,  title,  'slug': slug.current,    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    showBackButton,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       asset->{ url },       cornerRadius,      altText,      height     },    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {         asset->{ url },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {         asset->{ url },      },      button {          _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    buttons[] {        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {         asset->{ url },       },      size,      link    },    anchorId  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {         asset->{ url },       },      logo {         asset->{ url },       },    },    anchorId,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           asset->{ url },           aspectRatio,          cornerRadius,          enableBorder,          borderStyle,          altText         },        headingText,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {         asset->{ url },         aspectRatio,        cornerRadius,        enableBorder,        borderStyle,        altText       },      "slug": slug.current,    },    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  }  },    metaTitle,  metaDescription,  metaKeywords,}
export type AllServicesQueryResult = Array<{
  _type: "service";
  title: string | null;
  slug: string | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      button: {
        _id: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        headingText: string | null;
        headingSize: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          asset: {
            url: string | null;
          } | null;
          aspectRatio: "portrait" | "rectangle" | "square" | null;
          cornerRadius: "rounded" | "straight" | null;
          enableBorder: boolean | null;
          borderStyle: "dashed" | "solid" | null;
          altText: string | null;
        } | null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    showBackButton: boolean | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      cornerRadius: "rounded" | "straight" | null;
      altText: string | null;
      height: "full" | "short" | null;
    } | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
        aspectRatio: null;
        cornerRadius: "rounded" | "straight" | null;
        enableBorder: null;
        borderStyle: null;
        altText: string | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  }> | null;
  metaTitle: null;
  metaDescription: null;
  metaKeywords: null;
}>;
// Variable: servicesPageQuery
// Query: *[_type == 'servicesPage'][0] {  _type,  title,  'slug': slug.current,    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    showBackButton,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       asset->{ url },       cornerRadius,      altText,      height     },    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {         asset->{ url },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {         asset->{ url },      },      button {          _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    buttons[] {        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {         asset->{ url },       },      size,      link    },    anchorId  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {         asset->{ url },       },      logo {         asset->{ url },       },    },    anchorId,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           asset->{ url },           aspectRatio,          cornerRadius,          enableBorder,          borderStyle,          altText         },        headingText,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {         asset->{ url },         aspectRatio,        cornerRadius,        enableBorder,        borderStyle,        altText       },      "slug": slug.current,    },    buttons[]{        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  }  },    metaTitle,  metaDescription,  metaKeywords,}
export type ServicesPageQueryResult = {
  _type: "servicesPage";
  title: string | null;
  slug: string | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      button: {
        _id: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        headingText: string | null;
        headingSize: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          asset: {
            url: string | null;
          } | null;
          aspectRatio: "portrait" | "rectangle" | "square" | null;
          cornerRadius: "rounded" | "straight" | null;
          enableBorder: boolean | null;
          borderStyle: "dashed" | "solid" | null;
          altText: string | null;
        } | null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        headingText: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    showBackButton: boolean | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      cornerRadius: "rounded" | "straight" | null;
      altText: string | null;
      height: "full" | "short" | null;
    } | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
        aspectRatio: null;
        cornerRadius: "rounded" | "straight" | null;
        enableBorder: null;
        borderStyle: null;
        altText: string | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  }> | null;
  metaTitle: string | null;
  metaDescription: string | null;
  metaKeywords: string | null;
} | null;

// Source: ./src/sanity/lib/queries/singletons/navigation.ts
// Variable: navigationSettingsQuery
// Query: *[_type == 'navigationSettings'][0] {  "navbar": {    navbarMenuItems[] {      _key,      title,      pageReference->{        _id,        _type,        title,        "slug": slug.current      },      pageReferences[]->{        _id,        _type,        title,        "slug": slug.current      },      menuItemType,      isButton,    },  },  "slideOutMenu": {    showSlideOutMenu,    slideOutMenuItems[] {      _key,      title,      _type,      pageReference->{        _id,        title,        "slug": slug.current      },    },    slideOutMenuButtons[] {        _id,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    showCompanyDetailsSlideOutMenu,    "slideOutMenuSettings": *[_type == 'generalSettings'][0] {      companyEmailAddress,      companyPhoneNumber,      companySocialMediaLinks[] {        _key,        title,        profileUrl,        icon {          asset->{            url          }        }      }    }  },  "footer": {    footerColumns[] {      _key,      title,      menuItems[] {        _key,        title,        pageReference->{          _id,          title,          "slug": slug.current        },      }    },    footerLegalMenuItems[] {      _key,      title,      pageReference->{        _id,        title,        "slug": slug.current      },    },  }}
export type NavigationSettingsQueryResult = {
  navbar: {
    navbarMenuItems: Array<{
      _key: string;
      title: string | null;
      pageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      pageReferences: Array<{
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      }> | null;
      menuItemType: "group" | "single" | null;
      isButton: boolean | null;
    }> | null;
  };
  slideOutMenu: {
    showSlideOutMenu: boolean | null;
    slideOutMenuItems: Array<{
      _key: string;
      title: string | null;
      _type: null;
      pageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
    }> | null;
    slideOutMenuButtons: Array<{
      _id: null;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    showCompanyDetailsSlideOutMenu: boolean | null;
    slideOutMenuSettings: {
      companyEmailAddress: string | null;
      companyPhoneNumber: string | null;
      companySocialMediaLinks: Array<{
        _key: string;
        title: string | null;
        profileUrl: string | null;
        icon: {
          asset: {
            url: string | null;
          } | null;
        } | null;
      }> | null;
    } | null;
  };
  footer: {
    footerColumns: Array<{
      _key: string;
      title: string | null;
      menuItems: Array<{
        _key: string;
        title: string | null;
        pageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
      }> | null;
    }> | null;
    footerLegalMenuItems: Array<{
      _key: string;
      title: string | null;
      pageReference: {
        _id: string;
        title: string | null;
        slug: string | null;
      } | null;
    }> | null;
  };
} | null;

// Source: ./src/sanity/lib/queries/singletons/settings.ts
// Variable: generalSettingsQuery
// Query: *[_type == 'generalSettings'][0] {  siteTitle,  copyright,  homePage->{    title,    'slug': slug.current,  }}
export type GeneralSettingsQueryResult = {
  siteTitle: string | null;
  copyright: string | null;
  homePage: {
    title: string | null;
    slug: string | null;
  } | null;
} | null;
// Variable: blogSettingsQuery
// Query: *[_type == 'blogSettings'][0] {  showRelatedPosts,  showTableOfContents,  showPostsByCategory}
export type BlogSettingsQueryResult = {
  showRelatedPosts: boolean | null;
  showTableOfContents: boolean | null;
  showPostsByCategory: boolean | null;
} | null;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "*[_type == \"page\" && defined(slug.current)][] {\n  'params': { 'slug': slug.current }\n}": PagePathsQueryResult;
    "*[_type == 'page' && slug.current == $slug][0] {\n  _type,\n  title,\n  'slug': slug.current,\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    showBackButton,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      asset->{ url }, \n      cornerRadius,\n      altText,\n      height \n    },\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        asset->{ url }, \n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        asset->{ url },\n      },\n      button {\n        \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[] {\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        asset->{ url }, \n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        asset->{ url }, \n      },\n      logo { \n        asset->{ url }, \n      },\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          asset->{ url }, \n          aspectRatio,\n          cornerRadius,\n          enableBorder,\n          borderStyle,\n          altText \n        },\n        headingText,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        asset->{ url }, \n        aspectRatio,\n        cornerRadius,\n        enableBorder,\n        borderStyle,\n        altText \n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n\n  }\n,\n  \n  metaTitle,\n  metaDescription,\n  metaKeywords,\n\n}": PageBySlugQueryResult;
    "*[_type == 'post' && slug.current == $slug][0] {\n  _id,\n  _type,\n  _createdAt,\n  title,\n  'slug': slug.current,\n  excerpt,\n  \"tableOfContents\": content[style in [\"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]],\n  content[],\n  category->{\n    _id,\n    title,\n    categoryColor {\n      value\n    },\n    'slug': slug.current,\n  },\n  author->{\n    _id,\n    name,\n    username,\n    bio,\n    avatar { \n      asset->{ url }, \n    },\n  },\n  image { \n    asset->{ url }, \n    altText,\n    caption, \n    cornerRadius,\n  },\n  relatedPostsType,\n  \"relatedPosts\": select(\n    relatedPostsType == \"custom\" => customRelatedPosts[]->{ \n      _id,\n      _createdAt,\n      title,\n      'slug': slug.current,\n      excerpt,\n      category->{\n        _id,\n        title,\n        categoryColor->{\n          value\n        },\n        'slug': slug.current,\n      },\n      author->{\n        _id,\n        name,\n        username,\n        bio,\n        avatar { \n          asset->{ url }, \n        },\n      },\n      image { \n        asset->{ url }, \n        cornerRadius,\n        altText \n      }\n    },\n    relatedPostsType == \"autofill\" => *[_type == 'post' && category._ref == ^.category._ref && _id != ^._id][0...3]{ \n      _id,\n      _createdAt,\n      title,\n      'slug': slug.current,\n      category->{\n        _id,\n        title,\n        categoryColor->{\n          value\n        },\n        'slug': slug.current,\n      },\n      author->{\n        _id,\n        name,\n        username,\n        bio,\n        avatar { \n          asset->{ url }, \n        },\n      },\n      excerpt,\n      image { \n        asset->{ url }, \n        cornerRadius,\n        altText \n      }\n    },\n  ),\n  \"settings\": *[_type == \"blogSettings\"][0] {\n    showRelatedPosts,\n    showTableOfContents,\n    showPostsByCategory\n  },\n  \"categories\": *[_type == \"postCategory\"] {\n    _id,\n    title,\n    'slug': slug.current,\n  },\n  \n  metaTitle,\n  metaDescription,\n  metaKeywords,\n\n}": PostBySlugQueryResult;
    "*[_type == 'post'] {\n  _id,\n  _type,\n  _createdAt,\n  title,\n  'slug': slug.current,\n  excerpt,\n  category->{\n    _id,\n    title,\n    'slug': slug.current,\n  },\n  author->{\n    _id,\n    name,\n    username,\n    bio,\n    avatar { \n      asset->{ url }, \n    },\n  },\n  image { \n    asset->{ url }, \n    cornerRadius,\n    altText \n  },\n}": AllPostsQueryResult;
    "*[_type == 'postCategory'] | order(orderRank asc) {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n}": AllPostCategoriesQueryResult;
    "*[_type == 'post' && category->slug.current == $slug] {\n  _id,\n  _type,\n  _createdAt,\n  title,\n  'slug': slug.current,\n  excerpt,\n  category->{\n    _id,\n    title,\n    'slug': slug.current,\n  },\n  author->{\n    _id,\n    name,\n    username,\n    bio,\n    avatar { \n      asset->{ url }, \n    },\n  },\n  image { \n    asset->{ url }, \n    cornerRadius,\n    altText \n  },\n}": PostsByCategoryQueryResult;
    "*[_type == 'projectsPage'][0] {\n  _type,\n  title,\n  'slug': slug.current,\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    showBackButton,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      asset->{ url }, \n      cornerRadius,\n      altText,\n      height \n    },\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        asset->{ url }, \n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        asset->{ url },\n      },\n      button {\n        \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[] {\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        asset->{ url }, \n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        asset->{ url }, \n      },\n      logo { \n        asset->{ url }, \n      },\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          asset->{ url }, \n          aspectRatio,\n          cornerRadius,\n          enableBorder,\n          borderStyle,\n          altText \n        },\n        headingText,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        asset->{ url }, \n        aspectRatio,\n        cornerRadius,\n        enableBorder,\n        borderStyle,\n        altText \n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n\n  }\n,\n  \n  metaTitle,\n  metaDescription,\n  metaKeywords,\n\n}": ProjectsPageQueryResult;
    "*[_type == \"project\" && defined(slug.current)][] {\n  'params': { 'slug': slug.current }\n}": ProjectPathsQueryResult;
    "*[_type == 'project' && slug.current == $slug][0] {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n  category->{\n    _id,\n    title,\n    'slug': slug.current,\n  },\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    showBackButton,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      asset->{ url }, \n      cornerRadius,\n      altText,\n      height \n    },\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        asset->{ url }, \n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        asset->{ url },\n      },\n      button {\n        \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[] {\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        asset->{ url }, \n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        asset->{ url }, \n      },\n      logo { \n        asset->{ url }, \n      },\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          asset->{ url }, \n          aspectRatio,\n          cornerRadius,\n          enableBorder,\n          borderStyle,\n          altText \n        },\n        headingText,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        asset->{ url }, \n        aspectRatio,\n        cornerRadius,\n        enableBorder,\n        borderStyle,\n        altText \n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n\n  }\n,\n  \n  metaTitle,\n  metaDescription,\n  metaKeywords,\n\n}": ProjectBySlugQueryResult;
    "*[_type == 'project'] {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n  excerpt,\n  category->{\n    _id,\n    title,\n    'slug': slug.current,\n  },\n  image { \n    asset->{ url }, \n    cornerRadius,\n    height,\n    altText \n  },\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    showBackButton,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      asset->{ url }, \n      cornerRadius,\n      altText,\n      height \n    },\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        asset->{ url }, \n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        asset->{ url },\n      },\n      button {\n        \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[] {\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        asset->{ url }, \n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        asset->{ url }, \n      },\n      logo { \n        asset->{ url }, \n      },\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          asset->{ url }, \n          aspectRatio,\n          cornerRadius,\n          enableBorder,\n          borderStyle,\n          altText \n        },\n        headingText,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        asset->{ url }, \n        aspectRatio,\n        cornerRadius,\n        enableBorder,\n        borderStyle,\n        altText \n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n\n  }\n,\n  \n  metaTitle,\n  metaDescription,\n  metaKeywords,\n\n}": AllProjectsQueryResult;
    "*[_type == 'projectCategory'] | order(orderRank asc) {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n}": AllProjectCategoriesQueryResult;
    "*[_type == 'project' && category->slug.current == $slug] {\n  _id,\n  _type,\n  _createdAt,\n  title,\n  'slug': slug.current,\n  excerpt,\n  category->{\n    _id,\n    title,\n    'slug': slug.current,\n  },\n  image { \n    asset->{ url }, \n    cornerRadius,\n    height,\n    altText \n  },\n}": ProjectsByCategoryQueryResult;
    "*[_type == \"service\" && defined(slug.current)][] {\n  'params': { 'slug': slug.current }\n}": ServicePathsQueryResult;
    "*[_type == 'service' && slug.current == $slug][0] {\n  _type,\n  title,\n  'slug': slug.current,\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    showBackButton,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      asset->{ url }, \n      cornerRadius,\n      altText,\n      height \n    },\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        asset->{ url }, \n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        asset->{ url },\n      },\n      button {\n        \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[] {\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        asset->{ url }, \n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        asset->{ url }, \n      },\n      logo { \n        asset->{ url }, \n      },\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          asset->{ url }, \n          aspectRatio,\n          cornerRadius,\n          enableBorder,\n          borderStyle,\n          altText \n        },\n        headingText,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        asset->{ url }, \n        aspectRatio,\n        cornerRadius,\n        enableBorder,\n        borderStyle,\n        altText \n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n\n  }\n,\n  \n  metaTitle,\n  metaDescription,\n  metaKeywords,\n\n}": ServiceBySlugQueryResult;
    "*[_type == 'service'] {\n  _type,\n  title,\n  'slug': slug.current,\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    showBackButton,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      asset->{ url }, \n      cornerRadius,\n      altText,\n      height \n    },\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        asset->{ url }, \n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        asset->{ url },\n      },\n      button {\n        \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[] {\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        asset->{ url }, \n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        asset->{ url }, \n      },\n      logo { \n        asset->{ url }, \n      },\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          asset->{ url }, \n          aspectRatio,\n          cornerRadius,\n          enableBorder,\n          borderStyle,\n          altText \n        },\n        headingText,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        asset->{ url }, \n        aspectRatio,\n        cornerRadius,\n        enableBorder,\n        borderStyle,\n        altText \n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n\n  }\n,\n  \n  metaTitle,\n  metaDescription,\n  metaKeywords,\n\n}": AllServicesQueryResult;
    "*[_type == 'servicesPage'][0] {\n  _type,\n  title,\n  'slug': slug.current,\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    showBackButton,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      asset->{ url }, \n      cornerRadius,\n      altText,\n      height \n    },\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        asset->{ url }, \n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        asset->{ url },\n      },\n      button {\n        \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[] {\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        asset->{ url }, \n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        asset->{ url }, \n      },\n      logo { \n        asset->{ url }, \n      },\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          asset->{ url }, \n          aspectRatio,\n          cornerRadius,\n          enableBorder,\n          borderStyle,\n          altText \n        },\n        headingText,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        asset->{ url }, \n        aspectRatio,\n        cornerRadius,\n        enableBorder,\n        borderStyle,\n        altText \n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n\n  }\n,\n  \n  metaTitle,\n  metaDescription,\n  metaKeywords,\n\n}": ServicesPageQueryResult;
    "*[_type == 'navigationSettings'][0] {\n  \"navbar\": {\n    navbarMenuItems[] {\n      _key,\n      title,\n      pageReference->{\n        _id,\n        _type,\n        title,\n        \"slug\": slug.current\n      },\n      pageReferences[]->{\n        _id,\n        _type,\n        title,\n        \"slug\": slug.current\n      },\n      menuItemType,\n      isButton,\n    },\n  },\n  \"slideOutMenu\": {\n    showSlideOutMenu,\n    slideOutMenuItems[] {\n      _key,\n      title,\n      _type,\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    slideOutMenuButtons[] {\n      \n  _id,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    showCompanyDetailsSlideOutMenu,\n    \"slideOutMenuSettings\": *[_type == 'generalSettings'][0] {\n      companyEmailAddress,\n      companyPhoneNumber,\n      companySocialMediaLinks[] {\n        _key,\n        title,\n        profileUrl,\n        icon {\n          asset->{\n            url\n          }\n        }\n      }\n    }\n  },\n  \"footer\": {\n    footerColumns[] {\n      _key,\n      title,\n      menuItems[] {\n        _key,\n        title,\n        pageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n      }\n    },\n    footerLegalMenuItems[] {\n      _key,\n      title,\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n  }\n}": NavigationSettingsQueryResult;
    "*[_type == 'generalSettings'][0] {\n  siteTitle,\n  copyright,\n  homePage->{\n    title,\n    'slug': slug.current,\n  }\n}": GeneralSettingsQueryResult;
    "*[_type == 'blogSettings'][0] {\n  showRelatedPosts,\n  showTableOfContents,\n  showPostsByCategory\n}": BlogSettingsQueryResult;
  }
}
